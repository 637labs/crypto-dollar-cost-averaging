{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build Tradebot",
            "type": "shell",
            "command": "docker build -f builds/tradebot/Dockerfile . -t crypto-tradebot:local",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build Schedule Fanout",
            "type": "shell",
            "command": "docker build -f builds/schedule_fanout/Dockerfile . -t schedule-fanout:local",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            }
        },
        {
            "label": "Compile Frontend",
            "type": "shell",
            "command": "npx babel --extensions \".ts\" --copy-files frontend --out-dir fe_lib",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Compile Client",
            "type": "shell",
            "command": "npm run build",
            "options": {
                "cwd": "${workspaceFolder}/client",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build API Service",
            "type": "shell",
            "command": "docker build -f builds/api/Dockerfile . -t api-service:local",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            }
        },
        {
            "label": "Build Frontend",
            "type": "shell",
            "command": "docker build -f builds/frontend/Dockerfile . -t coinpilot-fe:local",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Build Services",
            "dependsOn": [
                "Build Tradebot",
                "Build Schedule Fanout",
                "Build API Service",
                "Build Frontend",
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Run Webpack DevServer",
            "type": "shell",
            "command": "npm run start",
            "options": {
                "cwd": "${workspaceFolder}/client",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run Services",
            "dependsOn": [
                "Build Services"
            ],
            "type": "shell",
            "command": "gcloudProject=$GCLOUD_PROJECT_ID localDevHome=$LOCAL_DEV_HOME tradebotTopic=$TRADEBOT_PUBSUB_TOPIC cbClientId=$COINBASE_CLIENT_ID cbClientSecret=$COINBASE_CLIENT_SECRET sessSecret=$EXPRSS_SESS_SECRET docker-compose -f docker-compose.yml up",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run App",
            "dependsOn": [
                "Run Services",
                "Run Webpack DevServer"
            ],
            "problemMatcher": []
        },
        {
            "label": "Create Profile",
            "type": "shell",
            "command": "GCLOUD_PROJECT=$GCLOUD_PROJECT_ID python -m app.scripts.create_profile --namespace=${input:profileNamespace} --api-key=${input:apiKey} --api-secret=${input:apiSecret} --api-passphrase=${input:apiPassphrase} --profile-nickname=${input:profileNickname}",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Configure Deposits",
            "type": "shell",
            "command": "python -m app.scripts.configure_target_deposits --profile-nickname=${input:profileNickname} ${input:depositSpecs}",
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "BASH_ENV": "${workspaceFolder}/.vscode/local.env"
                }
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "type": "promptString",
            "id": "profileNamespace",
            "description": "Profile namespace",
        },
        {
            "type": "promptString",
            "id": "apiKey",
            "description": "Profile API Key",
        },
        {
            "type": "promptString",
            "id": "apiSecret",
            "description": "Profile API Secret",
        },
        {
            "type": "promptString",
            "id": "apiPassphrase",
            "description": "Profile API Passphrase",
        },
        {
            "type": "promptString",
            "id": "profileNickname",
            "description": "Profile nickname",
        },
        {
            "type": "promptString",
            "id": "depositSpecs",
            "description": "Deposits",
        },
    ]
}